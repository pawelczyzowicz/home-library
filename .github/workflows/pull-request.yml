name: pull-request

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

env:
  IMAGE_NAME: home-library
  IMAGE_TAG: pr-${{ github.sha }}

jobs:
  build-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (anonymous)
        if: false
        run: echo "noop" # placeholder if pushing is needed later

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/etc/Dockerfile
          push: false
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          outputs: type=docker,dest=/tmp/home-library-image.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: home-library-image
          path: /tmp/home-library-image.tar
          retention-days: 3

  static-analysis:
    name: Static analysis
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: home-library-image
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/home-library-image.tar

      - name: Show images
        run: docker images

      - name: Composer install (inside container)
        run: |
          docker run --rm \
            -u 0:0 \
            -e COMPOSER_ALLOW_SUPERUSER=1 \
            -e APP_ENV=test \
            -v "$PWD":/var/www/html \
            -w /var/www/html \
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            bash -lc "git config --global --add safe.directory /var/www/html && cp .env.test .env || touch .env && composer install --no-interaction --prefer-dist --no-scripts"

      - name: Run GrumPHP tasks (phpcsfixer, phpmd, phpstan)
        run: |
          docker run --rm \
            -e HOME=/tmp \
            -v "$PWD":/var/www/html \
            -w /var/www/html \
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            bash -lc "git config --global --add safe.directory /var/www/html && git add -A && vendor/bin/grumphp run --ansi --no-interaction --tasks=phpcsfixer,phpmd,phpstan"

  tests:
    name: Unit tests
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: home-library-image
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/home-library-image.tar

      - name: Composer install (inside container)
        run: |
          docker run --rm \
            -u 0:0 \
            -e COMPOSER_ALLOW_SUPERUSER=1 \
            -e APP_ENV=test \
            -v "$PWD":/var/www/html \
            -w /var/www/html \
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            bash -lc "git config --global --add safe.directory /var/www/html && cp .env.test .env || touch .env && composer install --no-interaction --prefer-dist --no-scripts"

      - name: Run PHPUnit (Unit)
        run: |
          docker run --rm \
            -u 0:0 \
            -e APP_ENV=test \
            -v "$PWD":/var/www/html \
            -w /var/www/html \
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            bash -lc "vendor/bin/phpunit -c phpunit.dist.xml tests/Unit --colors=always"
      

  status-comment:
    name: Post status comment
    needs: [static-analysis, tests]
    if: ${{ success() }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Comment on PR with status
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ✅ Static analysis: passed
            ✅ Tests: passed
            ℹ️ Coverage collection disabled in PR workflow


